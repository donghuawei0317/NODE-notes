·常见的linux命令：
    - mkdir xxx【创建文件夹，命名为xxx】
    - touch xxx.txt【创建格式为txt的文件，命名为xxx】
    - cd xxx【进入xxx文件夹】
    - cd ../【返回上一级目录】
    - cd /【返回根目录】
    - cd ../../【返回上一级的上一级】
    - vi xxx.txt【进入文件编辑界面】→ 输入英文字母“ i ”，然后进行编辑→ 编辑完成后，ctrl+c【退出编辑状态】→ 输入“ :wq ”，保存并退出编辑界面
    - cat xxx.txt【查看文件内容】
·git的常用命令：
    - git init【初始化一个本地仓库】
    - git config --list【查看本地仓库的基础配置信息】
    - git config --global user.name "xxx"【配置全局的用户名】
    - git config --global user.email "xxx"【配置全局的邮箱】
    - clear【清屏】
    - git status【查看当前仓库文件的状态（工作区的文件是红色，暂存区的文件是绿色）】
    - git rm --cached xxx.txt【删除暂存区中对应的文件】
    - git add .【把工作区的文件提交到暂存区】
    - git commit -m "备注"【把文件从暂存区提交到历史区；每次想历史区提交而安检的时候，都会产生一个唯一的版本号】
    - git diff【对比工作区和暂存区的文件内容】
    - git checkout xxx.txt【把暂存区的文件覆盖工作区（暂存区的文件不变）】
    - git log【查看历史区文件的版本号】
    - git diff --cached【对比暂存区和历史区的文件内容】
    - git diff master【对比工作区和历史区的文件内容】
    - git reset --hard 版本号【将三个区域的文件统一为将该版本号对应的版本】
    - git commit -a -m "备注"【连续执行工作区提交到暂存区、暂存区提交到历史区（该命令只能用于提交过的文件）】
    - git reflog【查看所有的版本号】
·git有三个区（针对本地仓库）：
    - 工作区【当前电脑的磁盘中】
    - 暂存区
    - 历史区
·git的分支：
    - git branch 分支名【创建一个分支，创建分支相当于对主干进行克隆，主干有什么文件，分支中就有什么文件】
    - git branch【查看所有分支】
    - git checkout 分支名【切换分支】
    - git checkout master【切回主干（！切回主干之前，要将更改的文件提交到历史区）】
    - git merge 分支名【将分支的代码合并到主干上】

前端只是整个项目的一部分；

市场调研 → 产品经理（需求分析）→ UI →（估期）前端、后端（接口文档）→ 前后端联调（测试真正的接口）→ 开发人员进行测试 → 提交到测试环境 → 测试人员进行测试、提bug → 上线 → 代码审查codeReview
接口文档：url 前端的参数 后端返回的数据类型 请求方式

开发环境
测试环境
生产环境