node：
1- 基于v8引擎，性能高
2- 单线程，避免了线程之间的频繁切换，对内存消耗比较小
3- 非阻塞I/O操作，由于node的底层采用的是多线程机制
4- 有强大的第三方包管理库：npm

node是一个工具，最终需要部署在服务器，给 JS 提供运行环境
模块：遵循common.js规范；
核心模块 第三方模块 自定义模块（运行在node环境下的 js 都是一个单独的模块）

·自定义模块;
    - require【导入模块】
    - module.exports/exports【导出模块】
·第三方模块：
    - npm install 模块名 -g（全局安装） --save（生产依赖） --save-dev（开发环境）
    - yarn add 模块名
    - yarn remove
    - nrm ls 查看源
    - nrm use 源
    - nrm test 测试源
·核心模块：
    - fs：文件系统
    - fs.readFile( path,"utf8",callback(err,data){} )【读取文件完成之后就执行回调函数，“err”是读取错误时的错误信息，没有出错时是null；“data”是读取出的数据】
    - fs.readFileSync(path，option)【同步读取，默认有一个返回值，是读取到的数据】
    - fs.writeFile(path，data，option，callback)【异步写文件，data适应个字符串或者buffer类型】
    - fs.writeFileSync()【同步写文件】
    - fs.appendFile(path，data，callback(err){})【向文件的末尾添加数据。path是文件路径，若没有对应的文件，则自动创建一个；data是字符串，传入的不是字符串的时候，会默认将其转换成字符串】